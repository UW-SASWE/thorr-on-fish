install.packages(c("class", "foreign", "KernSmooth", "lattice", "MASS", "Matrix", "mgcv", "nlme", "nnet", "rpart", "spatial", "survival"))
detach("package:base", unload = TRUE)
library(base)
library(odbc)
library(DBI)
con <- DBI::dbConnect(odbc::odbc(),
Driver    = "MySQL Server",
Server    = "localhost",
Database  = "hydrothermal_viewer",
UID       = "root",
PWD       = "Sunshine@1993",
Port      = 3306)
con <- DBI::dbConnect(odbc::odbc(),
+                       Driver    = "SQL Server",
con <- DBI::dbConnect(odbc::odbc(),
Driver    = "SQL Server",
Server    = "localhost",
Database  = "hydrothermal_viewer",
UID       = "root",
PWD       = "Sunshine@1993",
Port      = 3306)
# create a list of all installed packages
ip <- as.data.frame(installed.packages())
head(ip)
# if you use MRO, make sure that no packages in this library will be removed
ip <- subset(ip, !grepl("MRO", ip$LibPath))
# we don't want to remove base or recommended packages either\
ip <- ip[!(ip[,"Priority"] %in% c("base", "recommended")),]
# determine the library where the packages are installed
path.lib <- unique(ip$LibPath)
# create a vector with all the names of the packages you want to remove
pkgs.to.remove <- ip[,1]
head(pkgs.to.remove)
# remove the packages
sapply(pkgs.to.remove, remove.packages, lib = path.lib)
library(odbc)
libPaths()
install.packages("ggplot2")
.libPaths()
.libPaths()
library(ggplot2)
library(ggthemes)
library(dplyr)
library(readr)
library(patchwork)
setwd("~/OneDrive - UW/01-Research/02-Fish/methods/02-fish_mass_bal")
data = read.table("hanford_chinook_mass_bal.csv",
header = TRUE,
sep = ",")
data = data %>% filter(run == "fall") %>% filter(year > 1985)
data$date = as.Date(data$date)
central_tendencies = read.table("hanford_central_tendencies.csv",
header = TRUE,
sep = ",")
ggplot(data = central_tendencies) +
geom_point(mapping = aes(x = mean_mean_temp, y = yearly_delta_ratio)) +
geom_smooth(mapping = aes(x = mean_mean_temp, y = yearly_delta_ratio),
method = "lm")
ggplot(data = data) +
geom_point(mapping = aes(x = mean_temp, y = outflow.m3.d., color = delta_ratio))
ggplot(data = data) +
geom_point(mapping = aes(x = mean_temp, y = delta_ratio)) +
geom_smooth(
mapping = aes(x = mean_temp, y = delta_ratio),
method = "loess",
se = TRUE
)
ggplot(data = data) +
geom_point(mapping = aes(x = doy, y = delta_ratio)) +
geom_smooth(
mapping = aes(x = doy, y = delta_ratio),
method = "loess",
se = TRUE
) +
coord_cartesian(xlim = c(1, NA))
ggplot(data = data) +
geom_point(mapping = aes(x = mean_temp, y = outflow.m3.d.)) +
geom_smooth(mapping = aes(x = mean_temp, y = outflow.m3.d.),
method = "loess")
ggplot(data = data) +
geom_point(mapping = aes(x = date, y = outflow.m3.d.))
ggplot(data = data) +
geom_point(mapping = aes(x = doy, y = outflow.m3.d. / 1e8)) +
geom_smooth(mapping = aes(x = doy, y = outflow.m3.d. / 1e8),
method = "loess")
ggplot(data = data) +
geom_point(mapping = aes(x = date, y = mean_temp))
ggplot(data = data) +
geom_point(mapping = aes(x = doy, y = delta_ratio)) +
geom_smooth(mapping = aes(x = doy, y = delta_ratio), method = "loess") +
coord_cartesian(ylim = c(-0, 1))
ggplot(data = data) +
geom_point(mapping = aes(x = doy, y = mcnary)) +
geom_smooth(mapping = aes(x = doy, y = mcnary), method = "loess")
ggplot(data = data) +
geom_point(mapping = aes(x = doy, y = delta_ratio)) +
geom_smooth(mapping = aes(x = doy, y = delta_ratio), method = "loess")
# mcnary_fish = data %>% filter(run == "fall") %>% select(date, days_from_fall, mcnary)
# mcnary_fish$site = "fish_in"
#
# out_fish = data %>% filter(run == "fall") %>% select(date, days_from_fall, prosser, ice_harbor, priest_rapids)
#
# out_fish$sum = rowSums(out_fish[,3:5], na.rm = TRUE)
# out_fish$site = "fish_out"
#
# colnames(mcnary_fish)[colnames(mcnary_fish) == 'mcnary'] <- 'fish_count'
# colnames(out_fish)[colnames(out_fish) == 'sum'] <- 'fish_count'
#
# fish = rbind(mcnary_fish, out_fish[,c(1,2,6,7)])
#
# ggplot(data = fish) +
#   geom_point(mapping = aes(x = days_from_fall, y = fish_count, shape = site)) +
#   geom_smooth(mapping = aes(x = days_from_fall, y = fish_count, color = site), method = "loess") +
#   theme_bw() +
#   xlab("Fall Run Day") +
#   ylab("Fish Count")
run_day_v_temp = ggplot(data = data)+
geom_point(mapping = aes(x = days_from_fall, y = mean_temp)) +
geom_smooth(mapping = aes(x = days_from_fall, y = mean_temp), method = "loess") +
theme_bw() +
xlab("Fall Run Day") +
ylab("Temperature (Â°C)") +
ggtitle('(a)')
run_day_v_outflow = ggplot(data = data)+
geom_point(mapping = aes(x = days_from_fall, y = outflow.m3.d. / 1e6)) +
geom_smooth(mapping = aes(x = days_from_fall, y = outflow.m3.d. / 1e6), method = "loess") +
theme_bw() +
xlab("Fall Run Day") +
ylab(expression(paste("Outflow (x",10^6, " ", m^3,"/d)"))) +
ggtitle('(b)')
run_day_v_fishcount = ggplot(data = data)+
geom_point(mapping = aes(x = days_from_fall, y = mcnary / 1e3)) +
geom_smooth(mapping = aes(x = days_from_fall, y = mcnary / 1e3), method = "loess") +
theme_bw() +
xlab("Fall Run Day") +
ylab(expression(paste("Fish Count (x",10^3, ")"))) +
ggtitle('(c)')
run_day_v_temp + run_day_v_outflow + run_day_v_fishcount
# # add a horizontal line at max temp
# geom_hline(yintercept = max(data$mean_temp), linetype="dashed", color = "red") +
# geom_hline(yintercept = 20.75, linetype="dashed", color = "blue") +
# geom_hline(yintercept = 19.4, linetype="dashed", color = "blue")
max(data$mean_temp)
ggplot(data, aes(doy, delta_ratio)) +
# geom_point() +
geom_smooth(method = "loess", color = "blue") +
coord_cartesian(ylim = c(0, 1)) +
geom_smooth(
data = ~ transform(., mean_temp_mod = scales::rescale(mean_temp, range(0, 1), range(mean_temp))),
aes(y = mean_temp_mod + .01, color = "red"),
method = "loess"
) +
scale_y_continuous(
# Features of the first axis
name = "Delta ratio (Del F / Mcnary F)",
# Add a second axis and specify its features
sec.axis = sec_axis( ~ scales::rescale(. - .01, range(data$mean_temp), range(0, 1)), name =
"Temperature (deg C)", )
)
central_tendencies = read.table("hanford_central_tendencies.csv",
header = TRUE,
sep = ",")
ggplot(data = central_tendencies) +
geom_point(mapping = aes(x = mean_mean_temp, y = mean_delta_ratio)) +
geom_text(
mapping = aes(x = mean_mean_temp, y = mean_delta_ratio, label = group_5_year),
nudge_x = 0.025,
nudge_y = 0.025,
size = 2.5
) +
geom_smooth(mapping = aes(x = mean_mean_temp, y = mean_delta_ratio),
method = "lm")
ggplot(data = central_tendencies) +
geom_point(mapping = aes(x = group_5_year, y = mean_mean_temp)) +
geom_smooth(mapping = aes(x = group_5_year, y = mean_mean_temp),
method = "lm")
